"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.


BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fialf369y9anjeus2(b*6ddqoeip(0u&w2mek52&@xiz%796ar'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'mysite.com',
    'localhost',
    '127.0.0.1',
    '28cf-194-54-153-123.eu.ngrok.io'
]

# Application definition

INSTALLED_APPS = [
    # local
    'account.apps.AccountConfig',  # разместили первым для того что бы шаблоны брались из этого приложения

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'social_django',  # социальная авторизация

    'sorl.thumbnail',  # для генерации картинок превью

    # local
    'images.apps.ImagesConfig',
    'actions.apps.ActionsConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = ((os.path.join(BASE_DIR, 'static')),)

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Перенаправление
LOGIN_REDIRECT_URL = 'dashboard'  # куда перенаправлять если не указан параметр next
LOGIN_URL = 'login'  # Куда перенаправлять для входа в систему
LOGOUT_URL = 'logout'  # Куда перенаправлять при выходе

# Почтовые отправления
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # хост SMTP-сервера
EMAIL_HOST_USER = 'krolik.zip23@gmail.com'  # логин пользователя для SMTP-сервера
EMAIL_HOST_PASSWORD = 'djztgaoyqawzmovc'  # пароль пользователя для SMTP-сервера
EMAIL_PORT = 587  # порт SMTP-сервера
EMAIL_USE_TLS = True  # использовать ли защищенное TLS-подключение

# для хранения медиа файлов
MEDIA_URL = '/media/'  # базовый URL
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  # путь где будут храниться файлы

# Указали явно настройку бэкэнда
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # стандартный django бэкэнд
    'account.authentication.EmailAuthBackend',  # написанный бэкэнд, для регистрации пользователя по email
    'social_core.backends.google.GoogleOAuth2',
]

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '1017312453893-24ol2obaer70tmoaqc18c5r0b4bid1n6.apps.googleusercontent.com'  # Google
# Consumer Key
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'  # Google Consumer Secret

# Настройка для CSRF при использовании ngrok
CSRF_TRUSTED_ORIGINS = ['https://28cf-194-54-153-123.eu.ngrok.io', 'https://*.127.0.0.1']

# Настройка для генерации get_absolute_url() для каждой модели перечисленной в настройке
ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_detail', args=[u.username])
}


# Настройки редис
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
